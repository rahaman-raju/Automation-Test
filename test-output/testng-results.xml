<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="5" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-11T21:00:46 BDT" name="Default suite" finished-at="2024-01-11T21:01:39 BDT" duration-ms="53175">
    <groups>
    </groups>
    <test started-at="2024-01-11T21:00:46 BDT" name="Default test" finished-at="2024-01-11T21:01:39 BDT" duration-ms="53175">
      <class name="EcomTestReport.TestCases">
        <test-method is-config="true" signature="setDriver()[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:00:40 BDT" name="setDriver" finished-at="2024-01-11T21:00:46 BDT" duration-ms="5869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDriver -->
        <test-method signature="logoPresence()[pri:1, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:00:46 BDT" name="logoPresence" description="Verify Logo presence on Home Page" finished-at="2024-01-11T21:00:49 BDT" duration-ms="3352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoPresence -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:00:49 BDT" name="afterMethod" finished-at="2024-01-11T21:00:49 BDT" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoPresence status=SUCCESS method=TestCases.logoPresence()[pri:1, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod1(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:00:49 BDT" name="afterMethod1" finished-at="2024-01-11T21:00:50 BDT" duration-ms="803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoPresence status=SUCCESS method=TestCases.logoPresence()[pri:1, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method signature="SignUp()[pri:2, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:00:50 BDT" name="SignUp" description="Register for new user" finished-at="2024-01-11T21:00:58 BDT" duration-ms="8177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUp -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:00:58 BDT" name="afterMethod" finished-at="2024-01-11T21:00:58 BDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignUp status=SUCCESS method=TestCases.SignUp()[pri:2, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod1(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:00:58 BDT" name="afterMethod1" finished-at="2024-01-11T21:00:59 BDT" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignUp status=SUCCESS method=TestCases.SignUp()[pri:2, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method signature="Userlogin()[pri:3, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:00:59 BDT" name="Userlogin" description="Verify user Login" finished-at="2024-01-11T21:01:05 BDT" duration-ms="6840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Userlogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:05 BDT" name="afterMethod" finished-at="2024-01-11T21:01:05 BDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Userlogin status=SUCCESS method=TestCases.Userlogin()[pri:3, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod1(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:06 BDT" name="afterMethod1" finished-at="2024-01-11T21:01:06 BDT" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Userlogin status=SUCCESS method=TestCases.Userlogin()[pri:3, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method signature="BrwoseProduct()[pri:4, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:06 BDT" name="BrwoseProduct" description="Browse for product" finished-at="2024-01-11T21:01:17 BDT" duration-ms="11120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BrwoseProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:17 BDT" name="afterMethod" finished-at="2024-01-11T21:01:17 BDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BrwoseProduct status=SUCCESS method=TestCases.BrwoseProduct()[pri:4, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod1(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:17 BDT" name="afterMethod1" finished-at="2024-01-11T21:01:17 BDT" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BrwoseProduct status=SUCCESS method=TestCases.BrwoseProduct()[pri:4, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method signature="AddToCart()[pri:5, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:17 BDT" name="AddToCart" description="Add to cart" finished-at="2024-01-11T21:01:36 BDT" duration-ms="18722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddToCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:36 BDT" name="afterMethod" finished-at="2024-01-11T21:01:36 BDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddToCart status=SUCCESS method=TestCases.AddToCart()[pri:5, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod1(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:36 BDT" name="afterMethod1" finished-at="2024-01-11T21:01:36 BDT" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddToCart status=SUCCESS method=TestCases.AddToCart()[pri:5, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method signature="TitleCheck()[pri:6, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:36 BDT" name="TitleCheck" description="Check the Title" finished-at="2024-01-11T21:01:37 BDT" duration-ms="762" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [NoCommerce] but found [NopCommerce]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [NoCommerce] but found [NopCommerce]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at EcomTestReport.TestCases.TitleCheck(TestCases.java:246)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TitleCheck -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:37 BDT" name="afterMethod" finished-at="2024-01-11T21:01:38 BDT" duration-ms="811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TitleCheck status=FAILURE method=TestCases.TitleCheck()[pri:6, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod1(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:38 BDT" name="afterMethod1" finished-at="2024-01-11T21:01:38 BDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TitleCheck status=FAILURE method=TestCases.TitleCheck()[pri:6, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method signature="SkipTheTest()[pri:7, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:38 BDT" name="SkipTheTest" description="Skip Test" finished-at="2024-01-11T21:01:39 BDT" duration-ms="697" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skip the test]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skip the test
at EcomTestReport.TestCases.SkipTheTest(TestCases.java:259)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SkipTheTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:39 BDT" name="afterMethod" finished-at="2024-01-11T21:01:39 BDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SkipTheTest status=SKIP method=TestCases.SkipTheTest()[pri:7, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod1(org.testng.ITestResult)[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:39 BDT" name="afterMethod1" finished-at="2024-01-11T21:01:39 BDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SkipTheTest status=SKIP method=TestCases.SkipTheTest()[pri:7, instance:EcomTestReport.TestCases@38bb9d7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:EcomTestReport.TestCases@38bb9d7a]" started-at="2024-01-11T21:01:39 BDT" name="tearDown" finished-at="2024-01-11T21:01:39 BDT" duration-ms="431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- EcomTestReport.TestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
